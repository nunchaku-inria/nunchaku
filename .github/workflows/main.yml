name: build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  run:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
        ocaml-compiler:
          - 4.08.x
          - 4.14.x
          - 5.03.x
    steps:
    - uses: actions/checkout@v2
    - uses: ocaml/setup-ocaml@v3
      with:
        ocaml-compiler: ${{ matrix.ocaml-compiler }}
        dune-cache: true
        allow-prerelease-opam: true
    - run: opam pin -n .
    - run: opam depext -yt nunchaku
    - run: opam install -t . --deps-only
    - run: opam exec -- dune build @install --profile=release
    - run: opam exec -- dune runtest --profile=release

    - name: Install CVC4 1.6
      if: matrix.ocaml-compiler == '5.03.x'
      run: |
        wget http://cvc4.cs.stanford.edu/downloads/builds/x86_64-linux-opt/cvc4-1.6-x86_64-linux-opt
        chmod +x cvc4-1.6-x86_64-linux-opt
        sudo mv cvc4-1.6-x86_64-linux-opt /usr/local/bin/cvc4

    - name: Install benchexec
      if: matrix.ocaml-compiler == '5.03.x'
      run: |
        sudo add-apt-repository ppa:sosy-lab/benchmarking
        sudo apt-get install -y benchexec

    - name: Run benchmark
      if: matrix.ocaml-compiler == '5.03.x'
      run:
        export PYTHONPATH="$(pwd)/bench/benchexec/:$PYTHONPATH"
        opam exec -- make bench
        cd bench/benchexec
        table-generator results/config.*.results.cvc4.xml.bz2

    - name: Upload benchmark results
      if: matrix.ocaml-compiler == '5.03.x'
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: bench/benchexec/results/
        retention-days: 30
