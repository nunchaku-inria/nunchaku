# outcome: unknown
# expected: sat or unknown
# status: sat

data key_ :=
  K1_
| K2_
| K3_
| K4_.
data card_ :=
  C1_
| C2_
| C3_
| C4_
| C5_.

val fst_ : card_ -> key_.
val snd_ : card_ -> key_.

data room_ :=
  R1_.

val r_ : room_.
val buggy_ : prop.

data guest_ :=
  G1_
| G2_.

val g_ : guest_.

data option_ :=
  None_
| Some_ guest_.
data state_ :=
  S1_
| S2_
| S3_
| S4_
| S5_
| S6_.

val s_ : state_.
val isin_ : state_ -> room_ -> guest_ -> prop.

rec next_ : state_ -> state_ -> prop :=
  forall (s1_ : state_) (s_H_ : state_). next_ s1_ s_H_ = (((s1_ = S1_) && (s_H_ = S2_)) || ((s1_ = S2_) && (s_H_ = S3_)) || ((s1_ = S3_) && (s_H_ = S4_)) || ((s1_ = S4_) && (s_H_ = S5_)) || ((s1_ = S5_) && (s_H_ = S6_))).

val owns_ : state_ -> room_ -> option_.
val safe_ : state_ -> room_ -> prop.
val cards_ : state_ -> guest_ -> card_ -> prop.
val currk_ : state_ -> room_ -> key_.
val roomk_ : state_ -> room_ -> key_.
val issued_ : state_ -> key_ -> prop.

pred [wf] reach_ : state_ -> prop :=
  forall (s1_ : state_). ((s1_ = S1_) && (forall (r1_ : room_). owns_ s1_ r1_ = None_) && (forall (r1_ : room_) (r_H_ : room_). (currk_ s1_ r1_ = currk_ s1_ r_H_) => (r1_ = r_H_)) && (forall (k_ : key_). issued_ s1_ k_ = (exists (r1_ : room_). currk_ s1_ r1_ = k_)) && (forall (g1_ : guest_) (c_ : card_). ~ (cards_ s1_ g1_ c_)) && (forall (r1_ : room_). roomk_ s1_ r1_ = currk_ s1_ r1_) && (forall (r1_ : room_) (g1_ : guest_). ~ (isin_ s1_ r1_ g1_)) && (forall (r1_ : room_). safe_ s1_ r1_)) => reach_ s1_;
  forall (s1_ : state_) (s_H_ : state_) (K_ : key_) (C_ : card_) (R_ : room_) (G_ : guest_). (next_ s1_ s_H_ && reach_ s1_ && (~ (issued_ s1_ K_)) && (fst_ C_ = currk_ s1_ R_) && (snd_ C_ = K_) && (forall (r1_ : room_). owns_ s_H_ r1_ = ((if r1_ = R_ then Some_ G_ else owns_ s1_ r1_))) && (forall (r1_ : room_). currk_ s_H_ r1_ = ((if r1_ = R_ then K_ else currk_ s1_ r1_))) && (forall (k_ : key_). issued_ s_H_ k_ = ((k_ = K_) || issued_ s1_ k_)) && (forall (g1_ : guest_) (c_ : card_). cards_ s_H_ g1_ c_ = (((g1_ = G_) && (c_ = C_)) || cards_ s1_ g1_ c_)) && (forall (r1_ : room_). roomk_ s_H_ r1_ = roomk_ s1_ r1_) && (forall (r1_ : room_) (g1_ : guest_). isin_ s_H_ r1_ g1_ = isin_ s1_ r1_ g1_) && (forall (r1_ : room_). safe_ s_H_ r1_ = ((~ (r1_ = R_)) && safe_ s1_ r1_))) => reach_ s_H_;
  forall (s1_ : state_) (s_H_ : state_) (G_ : guest_) (C_ : card_) (K_ : key_) (K_H_ : key_) (r1_ : room_) (R_ : room_). (next_ s1_ s_H_ && reach_ s1_ && cards_ s1_ G_ C_ && (fst_ C_ = K_) && (snd_ C_ = K_H_) && ((roomk_ s1_ r1_ = K_) || (roomk_ s1_ r1_ = K_H_)) && (forall (ra_ : room_). owns_ s_H_ ra_ = owns_ s1_ ra_) && (forall (ra_ : room_). currk_ s_H_ ra_ = currk_ s1_ ra_) && (forall (k_ : key_). issued_ s_H_ k_ = issued_ s1_ k_) && (forall (g1_ : guest_) (c_ : card_). cards_ s_H_ g1_ c_ = cards_ s1_ g1_ c_) && (forall (ra_ : room_). roomk_ s_H_ ra_ = ((if ra_ = R_ then K_H_ else roomk_ s1_ ra_))) && (forall (ra_ : room_) (g1_ : guest_). isin_ s_H_ ra_ g1_ = (((ra_ = R_) && (g1_ = G_)) || isin_ s1_ ra_ g1_)) && (forall (ra_ : room_). safe_ s_H_ ra_ = ((if ra_ = R_ then ((owns_ s1_ R_ = Some_ G_) && (forall (rb_ : room_) (g1_ : guest_). ~ (isin_ s1_ rb_ g1_)) && (buggy_ || (K_H_ = currk_ s1_ R_))) || safe_ s1_ R_ else safe_ s1_ ra_)))) => reach_ s_H_;
  forall (s1_ : state_) (s_H_ : state_) (R_ : room_) (G_ : guest_). (next_ s1_ s_H_ && reach_ s1_ && isin_ s1_ R_ G_ && (forall (r1_ : room_). owns_ s_H_ r1_ = owns_ s1_ r1_) && (forall (r1_ : room_). currk_ s_H_ r1_ = currk_ s1_ r1_) && (forall (k_ : key_). issued_ s_H_ k_ = issued_ s1_ k_) && (forall (g1_ : guest_) (c_ : card_). cards_ s_H_ g1_ c_ = cards_ s1_ g1_ c_) && (forall (r1_ : room_). roomk_ s_H_ r1_ = roomk_ s1_ r1_) && (forall (r1_ : room_) (g1_ : guest_). isin_ s_H_ r1_ g1_ = (((~ (r1_ = R_)) || (~ (g1_ = G_))) && isin_ s1_ r1_ g1_)) && (forall (r1_ : room_). safe_ s_H_ r1_ = safe_ s1_ r1_)) => reach_ s_H_.

spec reach_H_ : state_ -> prop :=
  forall (a_ : state_). reach_H_ a_ => ((exists (s1_ : state_). (a_ = s1_) && (s1_ = S1_) && (forall (r1_ : room_). owns_ s1_ r1_ = None_) && (forall (r1_ : room_) (r_H_ : room_). (currk_ s1_ r1_ = currk_ s1_ r_H_) => (r1_ = r_H_)) && (forall (k_ : key_). issued_ s1_ k_ = (exists (r1_ : room_). currk_ s1_ r1_ = k_)) && (forall (g1_ : guest_) (c_ : card_). ~ (cards_ s1_ g1_ c_)) && (forall (r1_ : room_). roomk_ s1_ r1_ = currk_ s1_ r1_) && (forall (r1_ : room_) (g1_ : guest_). ~ (isin_ s1_ r1_ g1_)) && (forall (r1_ : room_). safe_ s1_ r1_)) || (exists (s1_ : state_) (s_H_ : state_) (K_ : key_) (C_ : card_) (R_ : room_) (G_ : guest_). (a_ = s_H_) && next_ s1_ s_H_ && reach_ s1_ && (~ (issued_ s1_ K_)) && (fst_ C_ = currk_ s1_ R_) && (snd_ C_ = K_) && (forall (r1_ : room_). owns_ s_H_ r1_ = ((if r1_ = R_ then Some_ G_ else owns_ s1_ r1_))) && (forall (r1_ : room_). currk_ s_H_ r1_ = ((if r1_ = R_ then K_ else currk_ s1_ r1_))) && (forall (k_ : key_). issued_ s_H_ k_ = ((k_ = K_) || issued_ s1_ k_)) && (forall (g1_ : guest_) (c_ : card_). cards_ s_H_ g1_ c_ = (((g1_ = G_) && (c_ = C_)) || cards_ s1_ g1_ c_)) && (forall (r1_ : room_). roomk_ s_H_ r1_ = roomk_ s1_ r1_) && (forall (r1_ : room_) (g1_ : guest_). isin_ s_H_ r1_ g1_ = isin_ s1_ r1_ g1_) && (forall (r1_ : room_). safe_ s_H_ r1_ = ((~ (r1_ = R_)) && safe_ s1_ r1_))) || (exists (s1_ : state_) (s_H_ : state_) (G_ : guest_) (C_ : card_) (K_ : key_) (K_H_ : key_) (r1_ : room_) (R_ : room_). (a_ = s_H_) && next_ s1_ s_H_ && reach_ s1_ && cards_ s1_ G_ C_ && (fst_ C_ = K_) && (snd_ C_ = K_H_) && ((roomk_ s1_ r1_ = K_) || (roomk_ s1_ r1_ = K_H_)) && (forall (ra_ : room_). owns_ s_H_ ra_ = owns_ s1_ ra_) && (forall (ra_ : room_). currk_ s_H_ ra_ = currk_ s1_ ra_) && (forall (k_ : key_). issued_ s_H_ k_ = issued_ s1_ k_) && (forall (g1_ : guest_) (c_ : card_). cards_ s_H_ g1_ c_ = cards_ s1_ g1_ c_) && (forall (ra_ : room_). roomk_ s_H_ ra_ = ((if ra_ = R_ then K_H_ else roomk_ s1_ ra_))) && (forall (ra_ : room_) (g1_ : guest_). isin_ s_H_ ra_ g1_ = (((ra_ = R_) && (g1_ = G_)) || isin_ s1_ ra_ g1_)) && (forall (ra_ : room_). safe_ s_H_ ra_ = ((if ra_ = R_ then ((owns_ s1_ R_ = Some_ G_) && (forall (rb_ : room_) (g1_ : guest_). ~ (isin_ s1_ rb_ g1_)) && (buggy_ || (K_H_ = currk_ s1_ R_))) || safe_ s1_ R_ else safe_ s1_ ra_)))) || (exists (s1_ : state_) (s_H_ : state_) (R_ : room_) (G_ : guest_). (a_ = s_H_) && next_ s1_ s_H_ && reach_ s1_ && isin_ s1_ R_ G_ && (forall (r1_ : room_). owns_ s_H_ r1_ = owns_ s1_ r1_) && (forall (r1_ : room_). currk_ s_H_ r1_ = currk_ s1_ r1_) && (forall (k_ : key_). issued_ s_H_ k_ = issued_ s1_ k_) && (forall (g1_ : guest_) (c_ : card_). cards_ s_H_ g1_ c_ = cards_ s1_ g1_ c_) && (forall (r1_ : room_). roomk_ s_H_ r1_ = roomk_ s1_ r1_) && (forall (r1_ : room_) (g1_ : guest_). isin_ s_H_ r1_ g1_ = (((~ (r1_ = R_)) || (~ (g1_ = G_))) && isin_ s1_ r1_ g1_)) && (forall (r1_ : room_). safe_ s_H_ r1_ = safe_ s1_ r1_))).

goal ~ ((buggy_ && reach_H_ s_ && safe_ s_ r_ && isin_ s_ r_ g_) => (owns_ s_ r_ = Some_ g_)).
