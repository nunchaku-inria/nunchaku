
# basic pattern match
# expect: sat

data foo :=
  | A
  | B
  | C.

rec test_foo : foo -> prop :=
  forall x. test_foo x =
    match x with
    | A -> true
    | B -> false
    | C -> true
    end.

rec swap_foo : foo -> foo :=
  swap_foo = (fun x.
    match x with
    | A -> B
    | B -> C
    | C -> A
    end).


goal (exists x. test_foo x) && (exists x. swap_foo x = C).
